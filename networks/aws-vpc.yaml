---
AWSTemplateFormatVersion: '2010-09-09'

Description: This template deploys a VPC with a public and private subnet spread across two Availability Zones. It deploys an Internet Gateway with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ) and default routes for them in the private subnets.

Parameters:
  EnvironmentName:
    Type: String
    Description: An environment name that will be prefixed to resource names
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/28 # 16 subnets -- 14 hosts; netmask 255.255.255.240
    Description: Enter the IP range (CIDR notation) for this VPC
  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.0.16/28 # 10.0.0.17-10.0.0.30
    Description: Enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.0.32/28 # 10.0.0.33-10.0.0.46
    Description: Enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.0.48/28 # 10.0.0.49-10.0.0.62
    Description: Enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.0.64/28 # 10.0.0.65-10.0.0.78
    Description:  Enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - key: name
          value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAz '' ]
      MapPublicIpOnLaunch: true # instances launched in this subnet will receieve a public IPv4 address
      Tags:
        - key: name
          value: !Sub ${EnvironmentName} Public Subnet (AZ1)
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAz '' ]
      MapPublicIpOnLaunch: true # instances launched in this subnet will receieve a public IPv4 address
      Tags:
        - key: name
          value: !Sub ${EnvironmentName} Public Subnet (AZ2)
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAz '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - key: name
          value: !Sub ${EnvironmentName} Public Subnet (AZ1)
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAz '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - key: name
          value: !Sub ${EnvironmentName} Public Subnet (AZ2)  